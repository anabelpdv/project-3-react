{"ast":null,"code":"var _jsxFileName = \"/Users/ana/Desktop/project-3/client/src/components/Home.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport AddLocation from \"./location-components/AddLocation\";\nimport Map from \"./map-components/Map\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputHandler = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.inputCoordinatesHandle = e => {\n      this.setState({\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng()\n      });\n    };\n\n    this.formHandler = e => {\n      e.preventDefault();\n      const uploadData = new FormData();\n      uploadData.append('title', this.state.title);\n      uploadData.append('description', this.state.description);\n      uploadData.append('lat', this.state.lat);\n      uploadData.append('lng', this.state.lng);\n      uploadData.append('imageUrl', this.state.imageUrl); // <input type=\"file\" name=\"the-image\"/>\n      // app.post(req, res, next, uploadMagic.single('image') ,()=>{\n      //     console.log(req.file)\n      // })\n\n      axios.post('http://localhost:5000/api/locations', uploadData).then(response => {\n        this.getAllLocations();\n        this.setState({\n          title: '',\n          description: '',\n          lat: '',\n          lng: '',\n          imageUrl: ''\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fileUploadHandler = e => {\n      this.setState({\n        img: e.target.files[0]\n      });\n      console.log('The file to be uploaded is: ', e.target.files[0]);\n      const uploadData = new FormData();\n      uploadData.append('imageUrl', e.target.files[0]);\n      axios.post('http://localhost:5000/api/uploads', uploadData).then(res => {\n        //********After file is uploaded this line takes time to execute and if save is hit before the same image is save in MongoDb twice\n        //*************************** */\n        //*************************** */\n        this.setState({\n          imageUrl: res.data.secure_url\n        });\n      }).catch(err => {\n        console.log('Error while uploading the file: ', err);\n      });\n    };\n\n    this.getAllLocations = () => {\n      axios.get(\"http://localhost:5000/api/locations\").then(response => {\n        this.setState({\n          allLocations: response.data,\n          visibleLocations: response.data,\n          ready: true\n        }, () => {//this.renderMap()\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      map: {},\n      allLocations: [],\n      visibleLocations: [],\n      markers: [],\n      ready: false,\n      title: '',\n      description: '',\n      lat: '',\n      lng: '',\n      imageUrl: null\n    };\n  }\n\n  componentDidMount() {\n    this.getAllLocations();\n  }\n\n  render() {\n    console.log('rendering home component');\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.ready && React.createElement(Map, {\n      allLocations: this.state.allLocations,\n      inputCoordinatesHandle: this.inputCoordinatesHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(AddLocation, {\n      inputHandler: this.inputHandler,\n      fileUploadHandler: this.fileUploadHandler,\n      formHandler: this.formHandler,\n      getAllLocations: this.getAllLocations,\n      title: this.state.title,\n      description: this.state.description,\n      lat: this.state.lat,\n      lng: this.state.lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ana/Desktop/project-3/client/src/components/Home.js"],"names":["React","axios","AddLocation","Map","Home","Component","constructor","props","inputHandler","e","name","target","value","setState","inputCoordinatesHandle","lat","latLng","lng","formHandler","preventDefault","uploadData","FormData","append","state","title","description","imageUrl","post","then","response","getAllLocations","catch","err","console","log","fileUploadHandler","img","files","res","data","secure_url","get","allLocations","visibleLocations","ready","map","markers","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios'\nimport AddLocation from \"./location-components/AddLocation\";\nimport Map from \"./map-components/Map\";\n\n\n\n\nexport default class Home extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            map:{},\n            allLocations:[],\n            visibleLocations:[],\n            markers: [],\n            ready: false,\n            title:'',\n            description:'',\n            lat:'',\n            lng:'',\n            imageUrl:null,\n        }\n    }\n\n    componentDidMount(){\n        this.getAllLocations();\n    }\n\n    inputHandler=(e)=>{\n        const name = e.target.name;\n        const value = e.target.value;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    inputCoordinatesHandle=(e)=>{\n        this.setState({\n            lat: e.latLng.lat(),\n            lng:e.latLng.lng()\n        })\n    }\n\n    formHandler=(e)=>{\n        e.preventDefault()\n\n        const uploadData = new FormData();\n        \n        uploadData.append('title', this.state.title);\n        uploadData.append('description', this.state.description);\n        uploadData.append('lat', this.state.lat);\n        uploadData.append('lng', this.state.lng);\n        uploadData.append('imageUrl', this.state.imageUrl);\n\n\n        // <input type=\"file\" name=\"the-image\"/>\n\n\n        // app.post(req, res, next, uploadMagic.single('image') ,()=>{\n\n        //     console.log(req.file)\n\n        // })\n\n\n\n        \n        axios.post('http://localhost:5000/api/locations',uploadData)\n                .then(response=>{\n                    this.getAllLocations();\n                    this.setState({\n                        title:'',\n                        description:'',\n                        lat:'',\n                        lng:'',\n                        imageUrl:'',\n                    })\n                })\n                .catch(err=>{\n                    console.log(err)\n                })\n    }\n\n    fileUploadHandler = (e) =>{ \n\n        this.setState({img:  e.target.files[0]})\n\n\n        console.log('The file to be uploaded is: ', e.target.files[0]);\n        const uploadData = new FormData();\n        uploadData.append('imageUrl', e.target.files[0])\n    \n        axios.post('http://localhost:5000/api/uploads',uploadData)\n            .then(res =>{\n                //********After file is uploaded this line takes time to execute and if save is hit before the same image is save in MongoDb twice\n                //*************************** */\n                //*************************** */\n                this.setState({imageUrl: res.data.secure_url});\n            })\n            .catch(err=>{\n                console.log('Error while uploading the file: ', err);\n            });\n    }\n\n    getAllLocations=()=>{\n        axios.get(\"http://localhost:5000/api/locations\")\n                .then(response=>{\n                    this.setState({\n                        allLocations: response.data,\n                        visibleLocations: response.data,\n                        ready:true,\n                    },()=>{\n                     //this.renderMap()\n                    })\n                })\n                .catch(err=>{\n                console.log(err)\n                })\n    }\n\n    render(){\n        console.log('rendering home component')\n        return (\n            <section>\n                {this.state.ready &&\n                                        <Map \n                                            allLocations={this.state.allLocations}\n                                            inputCoordinatesHandle={this.inputCoordinatesHandle}\n                                        />\n                }\n                <AddLocation \n                    inputHandler={this.inputHandler} \n                    fileUploadHandler={this.fileUploadHandler}\n                    formHandler={this.formHandler} \n                    getAllLocations={this.getAllLocations} \n                    title={this.state.title} \n                    description={this.state.description}\n                    lat={this.state.lat} \n                    lng={this.state.lng}>\n                </AddLocation>\n            </section>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}