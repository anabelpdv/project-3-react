{"ast":null,"code":"var _jsxFileName = \"/Users/ana/Desktop/project-3/client/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport mapStyle from '../mapStyles';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport ReactDOMServer from \"react-dom/server\";\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadScript = url => {\n      let index = window.document.getElementsByTagName('script')[0];\n      let script = window.document.createElement('script');\n      script.src = url;\n      script.async = true;\n      script.defer = true;\n      index.parentNode.insertBefore(script, index);\n    };\n\n    this.renderMap = () => {\n      this.loadScript(\"https://maps.googleapis.com/maps/api/js?key=\".concat(process.env.REACT_APP_GOOGLE_KEY, \"&libraries=places&callback=initMap\"));\n      window.initMap = this.initMap;\n    };\n\n    this.hello = () => {\n      console.log('Hello');\n    };\n\n    this.InfoWindowContent = location => {\n      return React.createElement(\"div\", {\n        className: \"container-infoWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, location.title), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, location._id), React.createElement(\"img\", {\n        className: \"image-infoWindow\",\n        alt: \"\",\n        src: location.imageUrl[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/details/\".concat(location._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Details \")));\n    };\n\n    this.addMarker = () => {\n      for (let locations = 0; locations < this.props.visibleLocations.length; locations++) {\n        const lat = this.props.visibleLocations[locations].lat;\n        const lng = this.props.visibleLocations[locations].lng;\n        let marker = new window.google.maps.Marker({\n          position: {\n            lat: lat,\n            lng: lng\n          },\n          map: this.state.map\n        });\n        let infowindow = new window.google.maps.InfoWindow({\n          content: ''\n        });\n        marker.addListener('click', () => {\n          const content = ReactDOMServer.renderToString(this.InfoWindowContent(this.props.visibleLocations[locations]));\n          infowindow.setContent(content);\n          infowindow.open(this.map, marker);\n        });\n        let markersCopy = [...this.state.markers];\n        markersCopy.push(marker);\n        this.setState({\n          markers: markersCopy\n        });\n      }\n    };\n\n    this.initMap = () => {\n      //var myLatlng = {lat:25.7617,lng:-80.1918}\n      let map = new window.google.maps.Map(document.getElementById('map'), {\n        styles: mapStyle,\n        disableDoubleClickZoom: true\n      });\n      navigator.geolocation.getCurrentPosition(function (position) {\n        // Center on user's current location if geolocation prompt allowed\n        var initialLocation = new window.google.maps.LatLng(position.coords.latitude, position.coords.longitude - 0.7);\n        map.setCenter(initialLocation);\n        map.style = mapStyle;\n        map.setZoom(9);\n      }, function (positionError) {\n        // User denied geolocation prompt - default to Chicago\n        map.setCenter(new window.google.maps.LatLng(35.74750449199224, -86.7035884912965));\n        map.style = mapStyle;\n        map.setZoom(5);\n      });\n      this.setState({\n        map: map\n      });\n      map.addListener('dblclick', e => {\n        this.props.addLocationToggle();\n        this.props.inputCoordinatesHandle(e);\n      });\n      this.addMarker();\n    };\n\n    this.setMapOnAll = map => {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(map);\n      }\n    };\n\n    this.showMarkers = () => {\n      this.setMapOnAll(this.state.map);\n    };\n\n    this.state = {\n      map: '',\n      markers: [],\n      notifications: 'Anabelita'\n    };\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  componentDidUpdate(prevprops, prevstate) {\n    if (prevprops.visibleLocations.length !== this.props.visibleLocations.length) {\n      this.addMarker();\n    }\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ana/Desktop/project-3/client/src/components/Map.js"],"names":["React","Component","mapStyle","BrowserRouter","Link","ReactDOMServer","Map","constructor","props","loadScript","url","index","window","document","getElementsByTagName","script","createElement","src","async","defer","parentNode","insertBefore","renderMap","process","env","REACT_APP_GOOGLE_KEY","initMap","hello","console","log","InfoWindowContent","location","title","_id","imageUrl","addMarker","locations","visibleLocations","length","lat","lng","marker","google","maps","Marker","position","map","state","infowindow","InfoWindow","content","addListener","renderToString","setContent","open","markersCopy","markers","push","setState","getElementById","styles","disableDoubleClickZoom","navigator","geolocation","getCurrentPosition","initialLocation","LatLng","coords","latitude","longitude","setCenter","style","setZoom","positionError","e","addLocationToggle","inputCoordinatesHandle","setMapOnAll","i","setMap","showMarkers","notifications","componentDidMount","componentDidUpdate","prevprops","prevstate","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport mapStyle from '../mapStyles';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport ReactDOMServer from \"react-dom/server\";\n\n\n\nexport default class Map extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      map:'',\n      markers: [],\n      notifications: 'Anabelita'\n    }\n  }\n\n  componentDidMount(){\n    this.renderMap();\n  }\n\n  componentDidUpdate(prevprops, prevstate){\n    if(prevprops.visibleLocations.length !== this.props.visibleLocations.length){\n      this.addMarker();\n    }\n  }\n\n\n  loadScript=(url)=>{\n    let index = window.document.getElementsByTagName('script')[0];\n    let script = window.document.createElement('script');\n    script.src = url;\n    script.async = true;\n    script.defer = true;\n    index.parentNode.insertBefore(script,index);\n  }\n\n  renderMap=()=>{\n    this.loadScript(`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_KEY}&libraries=places&callback=initMap`);\n    window.initMap = this.initMap;\n  }\n\n\n  hello=()=>{\n    console.log('Hello')\n  }\n\n    InfoWindowContent =(location)=>{\n      return(\n        <div className=\"container-infoWindow\">\n          <h6>{location.title}</h6>\n          <h1>{location._id}</h1>\n          <img className=\"image-infoWindow\" alt=\"\" src={location.imageUrl[0]}/>\n          <BrowserRouter>\n              <Link to={`/details/${location._id}`}>Details </Link>\n          </BrowserRouter> \n        </div>\n      )\n    }\n\n  addMarker = () => {\n    for(let locations = 0; locations < this.props.visibleLocations.length; locations++){\n        const lat = this.props.visibleLocations[locations].lat;\n        const lng = this.props.visibleLocations[locations].lng;\n        \n        let marker = new window.google.maps.Marker({\n          position: {lat: lat, lng: lng},\n          map: this.state.map\n        });\n\n        let infowindow = new window.google.maps.InfoWindow({\n          content:'',\n        });\n\n        marker.addListener('click', ()=>{\n          const content = ReactDOMServer.renderToString(this.InfoWindowContent(this.props.visibleLocations[locations]));\n      \n          infowindow.setContent(content);\n          infowindow.open(this.map, marker);\n        });\n\n\n        let markersCopy = [...this.state.markers] \n\n        markersCopy.push(marker);\n        this.setState({\n          markers:markersCopy\n        });\n    }\n  }\n\n  initMap = () =>  {\n\n\n    //var myLatlng = {lat:25.7617,lng:-80.1918}\n  \n      let map = new window.google.maps.Map(document.getElementById('map'),{styles: mapStyle,disableDoubleClickZoom: true });\n\n      navigator.geolocation.getCurrentPosition(function(position) {\n        // Center on user's current location if geolocation prompt allowed\n        var initialLocation = new window.google.maps.LatLng(position.coords.latitude, position.coords.longitude-0.7);\n        map.setCenter(initialLocation);\n        map.style=mapStyle;\n        map.setZoom(9);\n      }, function(positionError) {\n        // User denied geolocation prompt - default to Chicago\n        map.setCenter(new window.google.maps.LatLng(35.74750449199224, -86.7035884912965));\n        map.style=mapStyle;\n        map.setZoom(5);\n  });\n\n      this.setState({\n        map:map,\n      })\n\n      map.addListener('dblclick',(e)=>{\n        this.props.addLocationToggle();\n        this.props.inputCoordinatesHandle(e);\n    })\n\n      this.addMarker();\n    }\n\n    setMapOnAll = (map) => {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(map);\n      }\n    }\n\n    showMarkers = () => {\n      this.setMapOnAll(this.state.map);\n    }\n    \n    \n\n  render() {\n    return (\n      <main>\n        <div id=\"map\"></div> \n      </main>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}