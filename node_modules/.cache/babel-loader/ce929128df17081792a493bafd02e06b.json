{"ast":null,"code":"var _jsxFileName = \"/Users/ana/Desktop/project-3/client/src/components/user-pages/Signup.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.genericSync = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.post('http://localhost:5000/api/signup', this.state, {\n        withCredentials: true\n      }).then(response => {\n        const userDoc = response.data.userDoc;\n        this.props.onUserChange(userDoc);\n      }).catch(err => {\n        console.log('Error in signup: ', err);\n      });\n    };\n\n    this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      message: null\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          fullName = _this$state.fullName,\n          email = _this$state.email,\n          password = _this$state.password;\n    console.log(\"is user in signup: \", this.props.currentUser);\n\n    if (this.props.currentUser) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"signup-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Full name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: fullName,\n      onChange: this.genericSync,\n      name: \"fullName\",\n      palceholder: \"Anabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: this.genericSync,\n      name: \"email\",\n      placeholder: \"user@uxer.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: this.genericSync,\n      name: \"password\",\n      placeholder: \"*************\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sign up\")), this.state.message && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}","map":{"version":3,"sources":["/Users/ana/Desktop/project-3/client/src/components/user-pages/Signup.js"],"names":["React","axios","Redirect","Signup","Component","constructor","props","genericSync","e","target","name","value","setState","handleSubmit","preventDefault","post","state","withCredentials","then","response","userDoc","data","onUserChange","catch","err","console","log","fullName","email","password","message","render","currentUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\n\n\nexport default class Signup extends React.Component {\n\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      message:null,\n    }\n  }\n\n  genericSync = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/api/signup', this.state, {withCredentials: true})\n          .then(response =>{\n            const { userDoc } = response.data;\n            this.props.onUserChange(userDoc);\n          })\n          .catch(err=>{\n            console.log('Error in signup: ', err);\n          })\n  }\n\n  render() {\n\n    const { fullName, email, password } = this.state;\n\n    console.log(\"is user in signup: \", this.props.currentUser)\n    if(this.props.currentUser){\n      return <Redirect to='/' />\n    }\n    return (\n        <section className=\"signup-page\">\n          <h2>Sign up</h2>\n            <form onSubmit={this.handleSubmit}>\n            <label>Full name:</label>\n              <input type=\"text\"\n                      value={fullName}\n                      onChange={this.genericSync}\n                      name=\"fullName\"\n                      palceholder=\"Anabel\"\n              />\n              <label>Email:</label>\n              <input type=\"email\"\n                      value={email}\n                      onChange={this.genericSync}\n                      name=\"email\"\n                      placeholder='user@uxer.com'\n              />\n              <label>Password:</label>\n              <input type=\"password\"\n                      value={password}\n                      onChange={this.genericSync}\n                      name=\"password\"\n                      placeholder='*************'\n              />\n              <button>Sign up</button>\n            </form>\n            {this.state.message && <div>{this.state.message}</div>} \n        </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}