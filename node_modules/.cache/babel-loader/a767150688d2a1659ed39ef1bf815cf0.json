{"ast":null,"code":"var _jsxFileName = \"/Users/ana/Desktop/project-3/client/src/components/Home.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport AddLocation from \"./location-components/AddLocation\";\nimport Map from \"./map-components/Map\";\nimport mapStyle from '../mapStyles';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputHandle = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.inputCoordinatesHandle = e => {\n      this.setState({\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng()\n      });\n    };\n\n    this.formHandler = e => {\n      e.preventDefault();\n      console.log('Anabel'); // const newLocation = {\n      //     title:this.state.title,\n      //     description: this.state.description,\n      //     lat: this.state.lat,\n      //     lng: this.state.lng\n      // }\n      // axios.post('http://localhost:5000/api/locations',newLocation)\n      //         .then(response=>{\n      //             this.getAllLocations();\n      //         })\n      //         .catch(err=>{\n      //             console.log(err)\n      //         })\n    };\n\n    this.fileUploadHandler = e => {\n      console.log('The file to be uploaded is: ', e.target.files[0]);\n      const uploadData = new FormData();\n      uploadData.append('imageUrl', e.target.files[0]);\n      axios.post('http://localhost:5000/api/uploads', uploadData).then(res => {\n        //********After file is uploaded this line takes time to execute and if save is hit before the same image is save in MongoDb twice\n        //*************************** */\n        //*************************** */\n        this.setState({\n          imageUrl: res.data.secure_url\n        });\n      }).catch(err => {\n        console.log('Error while uploading the file: ', err);\n      });\n    };\n\n    this.getAllLocations = () => {\n      axios.get(\"http://localhost:5000/api/locations\").then(response => {\n        this.setState({\n          allLocations: response.data,\n          visibleLocations: response.data,\n          ready: true\n        }, () => {//this.renderMap()\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      map: {},\n      allLocations: [],\n      visibleLocations: [],\n      markers: [],\n      ready: false,\n      title: '',\n      description: '',\n      lat: '',\n      lng: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getAllLocations();\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.ready && React.createElement(Map, {\n      allLocations: this.state.allLocations,\n      inputCoordinatesHandle: this.inputCoordinatesHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(AddLocation, {\n      inputHandle: this.inputHandler,\n      formHandle: this.formHandle,\n      getAllLocations: this.getAllLocations,\n      title: this.state.title,\n      description: this.state.description,\n      lat: this.state.lat,\n      lng: this.state.lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ana/Desktop/project-3/client/src/components/Home.js"],"names":["React","axios","AddLocation","Map","mapStyle","Home","Component","constructor","props","inputHandle","e","name","target","value","setState","inputCoordinatesHandle","lat","latLng","lng","formHandler","preventDefault","console","log","fileUploadHandler","files","uploadData","FormData","append","post","then","res","imageUrl","data","secure_url","catch","err","getAllLocations","get","response","allLocations","visibleLocations","ready","state","map","markers","title","description","componentDidMount","render","inputHandler","formHandle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios'\nimport AddLocation from \"./location-components/AddLocation\";\nimport Map from \"./map-components/Map\";\nimport mapStyle from '../mapStyles';\n\n\n\nexport default class Home extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            map:{},\n            allLocations:[],\n            visibleLocations:[],\n            markers: [],\n            ready: false,\n            title:'',\n            description:'',\n            lat:'',\n            lng:'',\n        }\n    }\n\n    componentDidMount(){\n        this.getAllLocations();\n    }\n\n    inputHandle=(e)=>{\n        const name = e.target.name;\n        const value = e.target.value;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    inputCoordinatesHandle=(e)=>{\n        this.setState({\n            lat: e.latLng.lat(),\n            lng:e.latLng.lng()\n        })\n    }\n\n    formHandler=(e)=>{\n        e.preventDefault()\n\n        console.log('Anabel')\n        // const newLocation = {\n        //     title:this.state.title,\n        //     description: this.state.description,\n        //     lat: this.state.lat,\n        //     lng: this.state.lng\n        // }\n    \n        // axios.post('http://localhost:5000/api/locations',newLocation)\n        //         .then(response=>{\n        //             this.getAllLocations();\n        //         })\n        //         .catch(err=>{\n        //             console.log(err)\n        //         })\n    }\n\n    fileUploadHandler = (e) =>{\n        console.log('The file to be uploaded is: ', e.target.files[0]);\n        const uploadData = new FormData();\n        uploadData.append('imageUrl', e.target.files[0])\n    \n        axios.post('http://localhost:5000/api/uploads',uploadData)\n            .then(res =>{\n                //********After file is uploaded this line takes time to execute and if save is hit before the same image is save in MongoDb twice\n                //*************************** */\n                //*************************** */\n                this.setState({imageUrl: res.data.secure_url});\n            })\n            .catch(err=>{\n                console.log('Error while uploading the file: ', err);\n            });\n    }\n\n    getAllLocations=()=>{\n        axios.get(\"http://localhost:5000/api/locations\")\n                .then(response=>{\n                    this.setState({\n                        allLocations: response.data,\n                        visibleLocations: response.data,\n                        ready:true,\n                    },()=>{\n                     //this.renderMap()\n                    })\n                })\n                .catch(err=>{\n                console.log(err)\n                })\n    }\n\n    render(){\n        return (\n            <section>\n                {this.state.ready &&\n                                        <Map \n                                            allLocations={this.state.allLocations}\n                                            inputCoordinatesHandle={this.inputCoordinatesHandle}\n                                        />\n                }\n                <AddLocation \n                    inputHandle={this.inputHandler} \n                    formHandle={this.formHandle} \n                    getAllLocations={this.getAllLocations} \n                    title={this.state.title} \n                    description={this.state.description}\n                    lat={this.state.lat} \n                    lng={this.state.lng}>\n                </AddLocation>\n            </section>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}