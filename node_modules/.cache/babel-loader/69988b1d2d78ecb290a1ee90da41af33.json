{"ast":null,"code":"var _jsxFileName = \"/Users/ana/Desktop/project-3/client/src/components/Map.js\";\nimport React, { Component } from 'react'; // import mapStyle from '../mapStyles';\n\nimport { BrowserRouter, Link } from \"react-router-dom\"; // import ReactDOMServer from \"react-dom/server\";\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.InfoWindowContent = location => {\n      return React.createElement(\"div\", {\n        className: \"container-infoWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, location.title), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, location._id), React.createElement(\"img\", {\n        className: \"image-infoWindow\",\n        alt: \"\",\n        src: location.imageUrl[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/details/\".concat(location._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Details \")));\n    };\n\n    this.setMapOnAll = map => {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(map);\n      }\n    };\n\n    this.showMarkers = () => {\n      this.setMapOnAll(this.state.map);\n    };\n\n    this.state = {\n      //map:'',\n      markers: [],\n      notifications: 'Anabelita'\n    };\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  componentDidUpdate(prevprops, prevstate) {\n    if (prevprops.visibleLocations.length !== this.props.visibleLocations.length) {\n      this.addMarker();\n    }\n  } // loadScript=(url)=>{\n  //   let index = window.document.getElementsByTagName('script')[0];\n  //   let script = window.document.createElement('script');\n  //   script.src = url;\n  //   script.async = true;\n  //   script.defer = true;\n  //   index.parentNode.insertBefore(script,index);\n  // }\n  // renderMap=()=>{\n  //   this.loadScript(`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_KEY}&libraries=places&callback=initMap`);\n  //   window.initMap = this.initMap;\n  // }\n\n\n  render() {\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ana/Desktop/project-3/client/src/components/Map.js"],"names":["React","Component","BrowserRouter","Link","Map","constructor","props","InfoWindowContent","location","title","_id","imageUrl","setMapOnAll","map","i","markers","length","setMap","showMarkers","state","notifications","componentDidMount","renderMap","componentDidUpdate","prevprops","prevstate","visibleLocations","addMarker","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,kBAApC,C,CACA;;AAIA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAEzCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAmClBC,iBAnCkB,GAmCEC,QAAD,IAAY;AAC3B,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,QAAQ,CAACC,KAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,QAAQ,CAACE,GAAd,CAFF,EAGE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,GAAG,EAAC,EAAtC;AAAyC,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAAT,CAAkB,CAAlB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,qBAAcH,QAAQ,CAACE,GAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAJF,CADF;AAUD,KA9Ce;;AAAA,SA4GhBE,WA5GgB,GA4GDC,GAAD,IAAS;AACrB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,OAAL,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5C,aAAKC,OAAL,CAAaD,CAAb,EAAgBG,MAAhB,CAAuBJ,GAAvB;AACD;AACF,KAhHe;;AAAA,SAkHhBK,WAlHgB,GAkHF,MAAM;AAClB,WAAKN,WAAL,CAAiB,KAAKO,KAAL,CAAWN,GAA5B;AACD,KApHe;;AAEhB,SAAKM,KAAL,GAAa;AACX;AACAJ,MAAAA,OAAO,EAAE,EAFE;AAGXK,MAAAA,aAAa,EAAE;AAHJ,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,SAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACtC,QAAGD,SAAS,CAACE,gBAAV,CAA2BV,MAA3B,KAAsC,KAAKV,KAAL,CAAWoB,gBAAX,CAA4BV,MAArE,EAA4E;AAC1E,WAAKW,SAAL;AACD;AACF,GAnBwC,CAsBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAwFAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAhIwC","sourcesContent":["import React, { Component } from 'react'\n// import mapStyle from '../mapStyles';\nimport { BrowserRouter, Link } from \"react-router-dom\";\n// import ReactDOMServer from \"react-dom/server\";\n\n\n\nexport default class Map extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      //map:'',\n      markers: [],\n      notifications: 'Anabelita'\n    }\n  }\n\n  componentDidMount(){\n    this.renderMap();\n  }\n\n  componentDidUpdate(prevprops, prevstate){\n    if(prevprops.visibleLocations.length !== this.props.visibleLocations.length){\n      this.addMarker();\n    }\n  }\n\n\n  // loadScript=(url)=>{\n  //   let index = window.document.getElementsByTagName('script')[0];\n  //   let script = window.document.createElement('script');\n  //   script.src = url;\n  //   script.async = true;\n  //   script.defer = true;\n  //   index.parentNode.insertBefore(script,index);\n  // }\n\n  // renderMap=()=>{\n  //   this.loadScript(`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_KEY}&libraries=places&callback=initMap`);\n  //   window.initMap = this.initMap;\n  // }\n\n\n  InfoWindowContent =(location)=>{\n      return(\n        <div className=\"container-infoWindow\">\n          <h6>{location.title}</h6>\n          <h1>{location._id}</h1>\n          <img className=\"image-infoWindow\" alt=\"\" src={location.imageUrl[0]}/>\n          <BrowserRouter>\n              <Link to={`/details/${location._id}`}>Details </Link>\n          </BrowserRouter> \n        </div>\n      )\n    }\n\n  // addMarker = () => {\n  //   for(let locations = 0; locations < this.props.visibleLocations.length; locations++){\n  //       const lat = this.props.visibleLocations[locations].lat;\n  //       const lng = this.props.visibleLocations[locations].lng;\n        \n  //       let marker = new window.google.maps.Marker({\n  //         position: {lat: lat, lng: lng},\n  //         map: this.state.map\n  //       });\n\n  //       let infowindow = new window.google.maps.InfoWindow({\n  //         content:'',\n  //       });\n\n  //       marker.addListener('click', ()=>{\n  //         const content = ReactDOMServer.renderToString(this.InfoWindowContent(this.props.visibleLocations[locations]));\n      \n  //         infowindow.setContent(content);\n  //         infowindow.open(this.map, marker);\n  //       });\n\n\n  //       let markersCopy = [...this.state.markers] \n\n  //       markersCopy.push(marker);\n  //       this.setState({\n  //         markers:markersCopy\n  //       });\n  //   }\n  // }\n\n  // initMap = () => {\n\n  //     let map = new window.google.maps.Map(document.getElementById('map'),{styles: mapStyle,disableDoubleClickZoom: true });\n\n  //     navigator.geolocation.getCurrentPosition(function(position) {\n  //       // Center on user's current location if geolocation prompt allowed\n  //       var initialLocation = new window.google.maps.LatLng(position.coords.latitude, position.coords.longitude-0.7);\n  //       map.setCenter(initialLocation);\n  //       map.style = mapStyle;\n  //       map.setZoom(9);\n  //     }, function(positionError) {\n  //       // User denied geolocation prompt - default to Chicago\n  //       map.setCenter(new window.google.maps.LatLng(35.74750449199224, -86.7035884912965));\n  //       map.style=mapStyle;\n  //       map.setZoom(5);\n  // });\n\n  //     this.setState({\n  //       map:map,\n  //     })\n\n  //     map.addListener('dblclick',(e)=>{\n  //       this.props.addLocationToggle();\n  //       this.props.inputCoordinatesHandle(e);\n  //   })\n\n  //     this.addMarker();\n  //   }\n\n    setMapOnAll = (map) => {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(map);\n      }\n    }\n\n    showMarkers = () => {\n      this.setMapOnAll(this.state.map);\n    }\n    \n    \n\n  render() {\n    return (\n      <main>\n        <div id=\"map\"></div> \n      </main>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}